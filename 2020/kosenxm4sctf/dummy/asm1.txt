
dummy:     ファイル形式 elf64-x86-64


セクション .init の逆アセンブル:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 d9 ff 07 00 	mov    rax,QWORD PTR [rip+0x7ffd9]        # 80fe8 <__gmon_start__>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret

セクション .plt の逆アセンブル:

0000000000001020 <.plt>:
    1020:	ff 35 e2 ff 07 00    	push   QWORD PTR [rip+0x7ffe2]        # 81008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 ff 07 00    	jmp    QWORD PTR [rip+0x7ffe4]        # 81010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001030 <puts@plt>:
    1030:	ff 25 e2 ff 07 00    	jmp    QWORD PTR [rip+0x7ffe2]        # 81018 <puts@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <.plt>

0000000000001040 <__stack_chk_fail@plt>:
    1040:	ff 25 da ff 07 00    	jmp    QWORD PTR [rip+0x7ffda]        # 81020 <__stack_chk_fail@GLIBC_2.4>
    1046:	68 01 00 00 00       	push   0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <.plt>

0000000000001050 <printf@plt>:
    1050:	ff 25 d2 ff 07 00    	jmp    QWORD PTR [rip+0x7ffd2]        # 81028 <printf@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <.plt>

0000000000001060 <__isoc99_scanf@plt>:
    1060:	ff 25 ca ff 07 00    	jmp    QWORD PTR [rip+0x7ffca]        # 81030 <__isoc99_scanf@GLIBC_2.7>
    1066:	68 03 00 00 00       	push   0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <.plt>

セクション .text の逆アセンブル:

0000000000001070 <_start>:
    1070:	f3 0f 1e fa          	endbr64
    1074:	31 ed                	xor    ebp,ebp
    1076:	49 89 d1             	mov    r9,rdx
    1079:	5e                   	pop    rsi
    107a:	48 89 e2             	mov    rdx,rsp
    107d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    1081:	50                   	push   rax
    1082:	54                   	push   rsp
    1083:	4c 8d 05 16 d2 07 00 	lea    r8,[rip+0x7d216]        # 7e2a0 <__libc_csu_fini>
    108a:	48 8d 0d 9f d1 07 00 	lea    rcx,[rip+0x7d19f]        # 7e230 <__libc_csu_init>
    1091:	48 8d 3d d1 00 00 00 	lea    rdi,[rip+0xd1]        # 1169 <main>
    1098:	ff 15 42 ff 07 00    	call   QWORD PTR [rip+0x7ff42]        # 80fe0 <__libc_start_main@GLIBC_2.2.5>
    109e:	f4                   	hlt
    109f:	90                   	nop

00000000000010a0 <deregister_tm_clones>:
    10a0:	48 8d 3d a1 ff 07 00 	lea    rdi,[rip+0x7ffa1]        # 81048 <__TMC_END__>
    10a7:	48 8d 05 9a ff 07 00 	lea    rax,[rip+0x7ff9a]        # 81048 <__TMC_END__>
    10ae:	48 39 f8             	cmp    rax,rdi
    10b1:	74 15                	je     10c8 <deregister_tm_clones+0x28>
    10b3:	48 8b 05 1e ff 07 00 	mov    rax,QWORD PTR [rip+0x7ff1e]        # 80fd8 <_ITM_deregisterTMCloneTable>
    10ba:	48 85 c0             	test   rax,rax
    10bd:	74 09                	je     10c8 <deregister_tm_clones+0x28>
    10bf:	ff e0                	jmp    rax
    10c1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    10c8:	c3                   	ret
    10c9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000010d0 <register_tm_clones>:
    10d0:	48 8d 3d 71 ff 07 00 	lea    rdi,[rip+0x7ff71]        # 81048 <__TMC_END__>
    10d7:	48 8d 35 6a ff 07 00 	lea    rsi,[rip+0x7ff6a]        # 81048 <__TMC_END__>
    10de:	48 29 fe             	sub    rsi,rdi
    10e1:	48 89 f0             	mov    rax,rsi
    10e4:	48 c1 ee 3f          	shr    rsi,0x3f
    10e8:	48 c1 f8 03          	sar    rax,0x3
    10ec:	48 01 c6             	add    rsi,rax
    10ef:	48 d1 fe             	sar    rsi,1
    10f2:	74 14                	je     1108 <register_tm_clones+0x38>
    10f4:	48 8b 05 f5 fe 07 00 	mov    rax,QWORD PTR [rip+0x7fef5]        # 80ff0 <_ITM_registerTMCloneTable>
    10fb:	48 85 c0             	test   rax,rax
    10fe:	74 08                	je     1108 <register_tm_clones+0x38>
    1100:	ff e0                	jmp    rax
    1102:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1108:	c3                   	ret
    1109:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001110 <__do_global_dtors_aux>:
    1110:	f3 0f 1e fa          	endbr64
    1114:	80 3d 2d ff 07 00 00 	cmp    BYTE PTR [rip+0x7ff2d],0x0        # 81048 <__TMC_END__>
    111b:	75 33                	jne    1150 <__do_global_dtors_aux+0x40>
    111d:	55                   	push   rbp
    111e:	48 83 3d d2 fe 07 00 	cmp    QWORD PTR [rip+0x7fed2],0x0        # 80ff8 <__cxa_finalize@GLIBC_2.2.5>
    1125:	00
    1126:	48 89 e5             	mov    rbp,rsp
    1129:	74 0d                	je     1138 <__do_global_dtors_aux+0x28>
    112b:	48 8b 3d 0e ff 07 00 	mov    rdi,QWORD PTR [rip+0x7ff0e]        # 81040 <__dso_handle>
    1132:	ff 15 c0 fe 07 00    	call   QWORD PTR [rip+0x7fec0]        # 80ff8 <__cxa_finalize@GLIBC_2.2.5>
    1138:	e8 63 ff ff ff       	call   10a0 <deregister_tm_clones>
    113d:	c6 05 04 ff 07 00 01 	mov    BYTE PTR [rip+0x7ff04],0x1        # 81048 <__TMC_END__>
    1144:	5d                   	pop    rbp
    1145:	c3                   	ret
    1146:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    114d:	00 00 00
    1150:	c3                   	ret
    1151:	66 66 2e 0f 1f 84 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    1158:	00 00 00 00
    115c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001160 <frame_dummy>:
    1160:	f3 0f 1e fa          	endbr64
    1164:	e9 67 ff ff ff       	jmp    10d0 <register_tm_clones>

0000000000001169 <main>:
    1169:	55                   	push   rbp
    116a:	48 89 e5             	mov    rbp,rsp
    116d:	48 83 ec 40          	sub    rsp,0x40
    1171:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1178:	00 00
    117a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    117e:	31 c0                	xor    eax,eax
    d33a:	c7 45 cc 00 00 00 00 	mov    DWORD PTR [rbp-0x34],0x0
    d341:	48 8d 3d bc 1c 07 00 	lea    rdi,[rip+0x71cbc]        # 7f004 <_IO_stdin_used+0x4>
    d348:	b8 00 00 00 00       	mov    eax,0x0
    d34d:	e8 fe 3c ff ff       	call   1050 <printf@plt>
   18e40:	48 8d 45 d0          	lea    rax,[rbp-0x30]

scanf
   18e44:	48 89 c6             	mov    rsi,rax
   18e47:	48 8d 3d bd 61 06 00 	lea    rdi,[rip+0x661bd]        # 7f00b <_IO_stdin_used+0xb>
   18e4e:	b8 00 00 00 00       	mov    eax,0x0
   18e53:	e8 08 82 fe ff       	call   1060 <__isoc99_scanf@plt>



   2495a:	48 8d 45 d0          	lea    rax,[rbp-0x30]
   2495e:	8b 00                	mov    eax,DWORD PTR [rax]
   24960:	3d 78 6d 34 73       	cmp    eax,0x73346d78
   24965:	74 07                	je     2496e <main+0x23805>
   24967:	c7 45 cc 01 00 00 00 	mov    DWORD PTR [rbp-0x34],0x1

   2f8a2:	48 8d 45 d0          	lea    rax,[rbp-0x30]
   2f8a6:	48 83 c0 04          	add    rax,0x4
   2f8aa:	8b 00                	mov    eax,DWORD PTR [rax]
   2f8ac:	3d 7b 6d 61 64       	cmp    eax,0x64616d7b
   2f8b1:	74 07                	je     2f8ba <main+0x2e751>
   2f8b3:	c7 45 cc 01 00 00 00 	mov    DWORD PTR [rbp-0x34],0x1

   3a6d2:	48 8d 45 d0          	lea    rax,[rbp-0x30]
   3a6d6:	48 83 c0 08          	add    rax,0x8
   3a6da:	8b 00                	mov    eax,DWORD PTR [rax]
   3a6dc:	3d 5f 64 75 6d       	cmp    eax,0x6d75645f
   3a6e1:	74 07                	je     3a6ea <main+0x39581>
   3a6e3:	c7 45 cc 01 00 00 00 	mov    DWORD PTR [rbp-0x34],0x1

   45e50:	48 8d 45 d0          	lea    rax,[rbp-0x30]
   45e54:	48 83 c0 0c          	add    rax,0xc
   45e58:	8b 00                	mov    eax,DWORD PTR [rax]
   45e5a:	3d 6d 79 5f 62       	cmp    eax,0x625f796d
   45e5f:	74 07                	je     45e68 <main+0x44cff>
   45e61:	c7 45 cc 01 00 00 00 	mov    DWORD PTR [rbp-0x34],0x1

   5193c:	48 8d 45 d0          	lea    rax,[rbp-0x30]
   51940:	48 83 c0 10          	add    rax,0x10
   51944:	8b 00                	mov    eax,DWORD PTR [rax]
   51946:	3d 6c 6f 63 6b       	cmp    eax,0x6b636f6c
   5194b:	74 07                	je     51954 <main+0x507eb>
   5194d:	c7 45 cc 01 00 00 00 	mov    DWORD PTR [rbp-0x34],0x1

   5cdba:	48 8d 45 d0          	lea    rax,[rbp-0x30]
   5cdbe:	48 83 c0 14          	add    rax,0x14
   5cdc2:	8b 00                	mov    eax,DWORD PTR [rax]
   5cdc4:	3d 73 5f 74 68       	cmp    eax,0x68745f73
   5cdc9:	74 07                	je     5cdd2 <main+0x5bc69>
   5cdcb:	c7 45 cc 01 00 00 00 	mov    DWORD PTR [rbp-0x34],0x1

   67cc0:	48 8d 45 d0          	lea    rax,[rbp-0x30]
   67cc4:	48 83 c0 18          	add    rax,0x18
   67cc8:	8b 00                	mov    eax,DWORD PTR [rax]
   67cca:	3d 65 5f 77 61       	cmp    eax,0x61775f65
   67ccf:	74 07                	je     67cd8 <main+0x66b6f>
   67cd1:	c7 45 cc 01 00 00 00 	mov    DWORD PTR [rbp-0x34],0x1

   7341c:	48 8d 45 d0          	lea    rax,[rbp-0x30]
   73420:	48 83 c0 1c          	add    rax,0x1c
   73424:	8b 00                	mov    eax,DWORD PTR [rax]
   73426:	3d 79 21 7d 00       	cmp    eax,0x7d2179
   7342b:	74 07                	je     73434 <main+0x722cb>
   7342d:	c7 45 cc 01 00 00 00 	mov    DWORD PTR [rbp-0x34],0x1



   7e1f5:	83 7d cc 00          	cmp    DWORD PTR [rbp-0x34],0x0
   7e1f9:	74 0e                	je     7e209 <main+0x7d0a0>
   7e1fb:	48 8d 3d 11 0e 00 00 	lea    rdi,[rip+0xe11]        # 7f013 <_IO_stdin_used+0x13>
   7e202:	e8 29 2e f8 ff       	call   1030 <puts@plt>
   7e207:	eb 0c                	jmp    7e215 <main+0x7d0ac>
   7e209:	48 8d 3d 10 0e 00 00 	lea    rdi,[rip+0xe10]        # 7f020 <_IO_stdin_used+0x20>
   7e210:	e8 1b 2e f8 ff       	call   1030 <puts@plt>
   7e215:	b8 00 00 00 00       	mov    eax,0x0
   7e21a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   7e21e:	64 48 2b 14 25 28 00 	sub    rdx,QWORD PTR fs:0x28
   7e225:	00 00
   7e227:	74 05                	je     7e22e <main+0x7d0c5>
   7e229:	e8 12 2e f8 ff       	call   1040 <__stack_chk_fail@plt>
   7e22e:	c9                   	leave
   7e22f:	c3                   	ret

000000000007e230 <__libc_csu_init>:
   7e230:	f3 0f 1e fa          	endbr64
   7e234:	41 57                	push   r15
   7e236:	4c 8d 3d ab 2b 00 00 	lea    r15,[rip+0x2bab]        # 80de8 <__frame_dummy_init_array_entry>
   7e23d:	41 56                	push   r14
   7e23f:	49 89 d6             	mov    r14,rdx
   7e242:	41 55                	push   r13
   7e244:	49 89 f5             	mov    r13,rsi
   7e247:	41 54                	push   r12
   7e249:	41 89 fc             	mov    r12d,edi
   7e24c:	55                   	push   rbp
   7e24d:	48 8d 2d 9c 2b 00 00 	lea    rbp,[rip+0x2b9c]        # 80df0 <__do_global_dtors_aux_fini_array_entry>
   7e254:	53                   	push   rbx
   7e255:	4c 29 fd             	sub    rbp,r15
   7e258:	48 83 ec 08          	sub    rsp,0x8
   7e25c:	e8 9f 2d f8 ff       	call   1000 <_init>
   7e261:	48 c1 fd 03          	sar    rbp,0x3
   7e265:	74 1f                	je     7e286 <__libc_csu_init+0x56>
   7e267:	31 db                	xor    ebx,ebx
   7e269:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   7e270:	4c 89 f2             	mov    rdx,r14
   7e273:	4c 89 ee             	mov    rsi,r13
   7e276:	44 89 e7             	mov    edi,r12d
   7e279:	41 ff 14 df          	call   QWORD PTR [r15+rbx*8]
   7e27d:	48 83 c3 01          	add    rbx,0x1
   7e281:	48 39 dd             	cmp    rbp,rbx
   7e284:	75 ea                	jne    7e270 <__libc_csu_init+0x40>
   7e286:	48 83 c4 08          	add    rsp,0x8
   7e28a:	5b                   	pop    rbx
   7e28b:	5d                   	pop    rbp
   7e28c:	41 5c                	pop    r12
   7e28e:	41 5d                	pop    r13
   7e290:	41 5e                	pop    r14
   7e292:	41 5f                	pop    r15
   7e294:	c3                   	ret
   7e295:	66 66 2e 0f 1f 84 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   7e29c:	00 00 00 00

000000000007e2a0 <__libc_csu_fini>:
   7e2a0:	f3 0f 1e fa          	endbr64
   7e2a4:	c3                   	ret

セクション .fini の逆アセンブル:

000000000007e2a8 <_fini>:
   7e2a8:	f3 0f 1e fa          	endbr64
   7e2ac:	48 83 ec 08          	sub    rsp,0x8
   7e2b0:	48 83 c4 08          	add    rsp,0x8
   7e2b4:	c3                   	ret
