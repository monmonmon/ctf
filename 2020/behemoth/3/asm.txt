
behemoth3:     ファイル形式 elf32-i386


セクション .init の逆アセンブル:

080482f0 <_init>:
 80482f0:	53                   	push   ebx
 80482f1:	83 ec 08             	sub    esp,0x8
 80482f4:	e8 b7 00 00 00       	call   80483b0 <__x86.get_pc_thunk.bx>
 80482f9:	81 c3 9f 14 00 00    	add    ebx,0x149f
 80482ff:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 8048305:	85 c0                	test   eax,eax
 8048307:	74 05                	je     804830e <_init+0x1e>
 8048309:	e8 62 00 00 00       	call   8048370 <__gmon_start__@plt>
 804830e:	83 c4 08             	add    esp,0x8
 8048311:	5b                   	pop    ebx
 8048312:	c3                   	ret

セクション .plt の逆アセンブル:

08048320 <.plt>:
 8048320:	ff 35 9c 97 04 08    	push   DWORD PTR ds:0x804979c
 8048326:	ff 25 a0 97 04 08    	jmp    DWORD PTR ds:0x80497a0
 804832c:	00 00                	add    BYTE PTR [eax],al
	...

08048330 <printf@plt>:
 8048330:	ff 25 a4 97 04 08    	jmp    DWORD PTR ds:0x80497a4
 8048336:	68 00 00 00 00       	push   0x0
 804833b:	e9 e0 ff ff ff       	jmp    8048320 <.plt>

08048340 <fgets@plt>:
 8048340:	ff 25 a8 97 04 08    	jmp    DWORD PTR ds:0x80497a8
 8048346:	68 08 00 00 00       	push   0x8
 804834b:	e9 d0 ff ff ff       	jmp    8048320 <.plt>

08048350 <puts@plt>:
 8048350:	ff 25 ac 97 04 08    	jmp    DWORD PTR ds:0x80497ac
 8048356:	68 10 00 00 00       	push   0x10
 804835b:	e9 c0 ff ff ff       	jmp    8048320 <.plt>

08048360 <__libc_start_main@plt>:
 8048360:	ff 25 b0 97 04 08    	jmp    DWORD PTR ds:0x80497b0
 8048366:	68 18 00 00 00       	push   0x18
 804836b:	e9 b0 ff ff ff       	jmp    8048320 <.plt>

セクション .plt.got の逆アセンブル:

08048370 <__gmon_start__@plt>:
 8048370:	ff 25 94 97 04 08    	jmp    DWORD PTR ds:0x8049794
 8048376:	66 90                	xchg   ax,ax

セクション .text の逆アセンブル:

08048380 <_start>:
 8048380:	31 ed                	xor    ebp,ebp
 8048382:	5e                   	pop    esi
 8048383:	89 e1                	mov    ecx,esp
 8048385:	83 e4 f0             	and    esp,0xfffffff0
 8048388:	50                   	push   eax
 8048389:	54                   	push   esp
 804838a:	52                   	push   edx
 804838b:	68 40 85 04 08       	push   0x8048540
 8048390:	68 e0 84 04 08       	push   0x80484e0
 8048395:	51                   	push   ecx
 8048396:	56                   	push   esi
 8048397:	68 7b 84 04 08       	push   0x804847b
 804839c:	e8 bf ff ff ff       	call   8048360 <__libc_start_main@plt>
 80483a1:	f4                   	hlt
 80483a2:	66 90                	xchg   ax,ax
 80483a4:	66 90                	xchg   ax,ax
 80483a6:	66 90                	xchg   ax,ax
 80483a8:	66 90                	xchg   ax,ax
 80483aa:	66 90                	xchg   ax,ax
 80483ac:	66 90                	xchg   ax,ax
 80483ae:	66 90                	xchg   ax,ax

080483b0 <__x86.get_pc_thunk.bx>:
 80483b0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80483b3:	c3                   	ret
 80483b4:	66 90                	xchg   ax,ax
 80483b6:	66 90                	xchg   ax,ax
 80483b8:	66 90                	xchg   ax,ax
 80483ba:	66 90                	xchg   ax,ax
 80483bc:	66 90                	xchg   ax,ax
 80483be:	66 90                	xchg   ax,ax

080483c0 <deregister_tm_clones>:
 80483c0:	b8 bf 97 04 08       	mov    eax,0x80497bf
 80483c5:	2d bc 97 04 08       	sub    eax,0x80497bc
 80483ca:	83 f8 06             	cmp    eax,0x6
 80483cd:	76 1a                	jbe    80483e9 <deregister_tm_clones+0x29>
 80483cf:	b8 00 00 00 00       	mov    eax,0x0
 80483d4:	85 c0                	test   eax,eax
 80483d6:	74 11                	je     80483e9 <deregister_tm_clones+0x29>
 80483d8:	55                   	push   ebp
 80483d9:	89 e5                	mov    ebp,esp
 80483db:	83 ec 14             	sub    esp,0x14
 80483de:	68 bc 97 04 08       	push   0x80497bc
 80483e3:	ff d0                	call   eax
 80483e5:	83 c4 10             	add    esp,0x10
 80483e8:	c9                   	leave
 80483e9:	f3 c3                	repz ret
 80483eb:	90                   	nop
 80483ec:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

080483f0 <register_tm_clones>:
 80483f0:	b8 bc 97 04 08       	mov    eax,0x80497bc
 80483f5:	2d bc 97 04 08       	sub    eax,0x80497bc
 80483fa:	c1 f8 02             	sar    eax,0x2
 80483fd:	89 c2                	mov    edx,eax
 80483ff:	c1 ea 1f             	shr    edx,0x1f
 8048402:	01 d0                	add    eax,edx
 8048404:	d1 f8                	sar    eax,1
 8048406:	74 1b                	je     8048423 <register_tm_clones+0x33>
 8048408:	ba 00 00 00 00       	mov    edx,0x0
 804840d:	85 d2                	test   edx,edx
 804840f:	74 12                	je     8048423 <register_tm_clones+0x33>
 8048411:	55                   	push   ebp
 8048412:	89 e5                	mov    ebp,esp
 8048414:	83 ec 10             	sub    esp,0x10
 8048417:	50                   	push   eax
 8048418:	68 bc 97 04 08       	push   0x80497bc
 804841d:	ff d2                	call   edx
 804841f:	83 c4 10             	add    esp,0x10
 8048422:	c9                   	leave
 8048423:	f3 c3                	repz ret
 8048425:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8048429:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048430 <__do_global_dtors_aux>:
 8048430:	80 3d c4 97 04 08 00 	cmp    BYTE PTR ds:0x80497c4,0x0
 8048437:	75 13                	jne    804844c <__do_global_dtors_aux+0x1c>
 8048439:	55                   	push   ebp
 804843a:	89 e5                	mov    ebp,esp
 804843c:	83 ec 08             	sub    esp,0x8
 804843f:	e8 7c ff ff ff       	call   80483c0 <deregister_tm_clones>
 8048444:	c6 05 c4 97 04 08 01 	mov    BYTE PTR ds:0x80497c4,0x1
 804844b:	c9                   	leave
 804844c:	f3 c3                	repz ret
 804844e:	66 90                	xchg   ax,ax

08048450 <frame_dummy>:
 8048450:	b8 a8 96 04 08       	mov    eax,0x80496a8
 8048455:	8b 10                	mov    edx,DWORD PTR [eax]
 8048457:	85 d2                	test   edx,edx
 8048459:	75 05                	jne    8048460 <frame_dummy+0x10>
 804845b:	eb 93                	jmp    80483f0 <register_tm_clones>
 804845d:	8d 76 00             	lea    esi,[esi+0x0]
 8048460:	ba 00 00 00 00       	mov    edx,0x0
 8048465:	85 d2                	test   edx,edx
 8048467:	74 f2                	je     804845b <frame_dummy+0xb>
 8048469:	55                   	push   ebp
 804846a:	89 e5                	mov    ebp,esp
 804846c:	83 ec 14             	sub    esp,0x14
 804846f:	50                   	push   eax
 8048470:	ff d2                	call   edx
 8048472:	83 c4 10             	add    esp,0x10
 8048475:	c9                   	leave
 8048476:	e9 75 ff ff ff       	jmp    80483f0 <register_tm_clones>

0804847b <main>:
 804847b:	55                   	push   ebp
 804847c:	89 e5                	mov    ebp,esp
 804847e:	81 ec c8 00 00 00    	sub    esp,0xc8
 # printf
 8048484:	68 60 85 04 08       	push   0x8048560
 8048489:	e8 a2 fe ff ff       	call   8048330 <printf@plt>
 804848e:	83 c4 04             	add    esp,0x4

 # fgets
 8048491:	a1 c0 97 04 08       	mov    eax,ds:0x80497c0
 8048496:	50                   	push   eax
 8048497:	68 c8 00 00 00       	push   0xc8
 804849c:	8d 85 38 ff ff ff    	lea    eax,[ebp-0xc8]
 80484a2:	50                   	push   eax
 80484a3:	e8 98 fe ff ff       	call   8048340 <fgets@plt>
 80484a8:	83 c4 0c             	add    esp,0xc

 # printf
 80484ab:	68 74 85 04 08       	push   0x8048574
 80484b0:	e8 7b fe ff ff       	call   8048330 <printf@plt>
 80484b5:	83 c4 04             	add    esp,0x4

 # printf
 80484b8:	8d 85 38 ff ff ff    	lea    eax,[ebp-0xc8]
 80484be:	50                   	push   eax
 80484bf:	e8 6c fe ff ff       	call   8048330 <printf@plt>
 80484c4:	83 c4 04             	add    esp,0x4

 # puts
 80484c7:	68 7e 85 04 08       	push   0x804857e
 80484cc:	e8 7f fe ff ff       	call   8048350 <puts@plt>
 80484d1:	83 c4 04             	add    esp,0x4
 80484d4:	b8 00 00 00 00       	mov    eax,0x0
 80484d9:	c9                   	leave
 80484da:	c3                   	ret
 80484db:	66 90                	xchg   ax,ax
 80484dd:	66 90                	xchg   ax,ax
 80484df:	90                   	nop

080484e0 <__libc_csu_init>:
 80484e0:	55                   	push   ebp
 80484e1:	57                   	push   edi
 80484e2:	56                   	push   esi
 80484e3:	53                   	push   ebx
 80484e4:	e8 c7 fe ff ff       	call   80483b0 <__x86.get_pc_thunk.bx>
 80484e9:	81 c3 af 12 00 00    	add    ebx,0x12af
 80484ef:	83 ec 0c             	sub    esp,0xc
 80484f2:	8b 6c 24 20          	mov    ebp,DWORD PTR [esp+0x20]
 80484f6:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 80484fc:	e8 ef fd ff ff       	call   80482f0 <_init>
 8048501:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 8048507:	29 c6                	sub    esi,eax
 8048509:	c1 fe 02             	sar    esi,0x2
 804850c:	85 f6                	test   esi,esi
 804850e:	74 25                	je     8048535 <__libc_csu_init+0x55>
 8048510:	31 ff                	xor    edi,edi
 8048512:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048518:	83 ec 04             	sub    esp,0x4
 804851b:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 804851f:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 8048523:	55                   	push   ebp
 8048524:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 804852b:	83 c7 01             	add    edi,0x1
 804852e:	83 c4 10             	add    esp,0x10
 8048531:	39 fe                	cmp    esi,edi
 8048533:	75 e3                	jne    8048518 <__libc_csu_init+0x38>
 8048535:	83 c4 0c             	add    esp,0xc
 8048538:	5b                   	pop    ebx
 8048539:	5e                   	pop    esi
 804853a:	5f                   	pop    edi
 804853b:	5d                   	pop    ebp
 804853c:	c3                   	ret
 804853d:	8d 76 00             	lea    esi,[esi+0x0]

08048540 <__libc_csu_fini>:
 8048540:	f3 c3                	repz ret

セクション .fini の逆アセンブル:

08048544 <_fini>:
 8048544:	53                   	push   ebx
 8048545:	83 ec 08             	sub    esp,0x8
 8048548:	e8 63 fe ff ff       	call   80483b0 <__x86.get_pc_thunk.bx>
 804854d:	81 c3 4b 12 00 00    	add    ebx,0x124b
 8048553:	83 c4 08             	add    esp,0x8
 8048556:	5b                   	pop    ebx
 8048557:	c3                   	ret
