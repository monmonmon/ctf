
behemoth7:     ファイル形式 elf32-i386


セクション .init の逆アセンブル:

08048374 <_init>:
 8048374:	53                   	push   ebx
 8048375:	83 ec 08             	sub    esp,0x8
 8048378:	e8 e3 00 00 00       	call   8048460 <__x86.get_pc_thunk.bx>
 804837d:	81 c3 8f 15 00 00    	add    ebx,0x158f
 8048383:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 8048389:	85 c0                	test   eax,eax
 804838b:	74 05                	je     8048392 <_init+0x1e>
 804838d:	e8 8e 00 00 00       	call   8048420 <__gmon_start__@plt>
 8048392:	83 c4 08             	add    esp,0x8
 8048395:	5b                   	pop    ebx
 8048396:	c3                   	ret    

セクション .plt の逆アセンブル:

080483a0 <.plt>:
 80483a0:	ff 35 10 99 04 08    	push   DWORD PTR ds:0x8049910
 80483a6:	ff 25 14 99 04 08    	jmp    DWORD PTR ds:0x8049914
 80483ac:	00 00                	add    BYTE PTR [eax],al
	...

080483b0 <strcpy@plt>:
 80483b0:	ff 25 18 99 04 08    	jmp    DWORD PTR ds:0x8049918
 80483b6:	68 00 00 00 00       	push   0x0
 80483bb:	e9 e0 ff ff ff       	jmp    80483a0 <.plt>

080483c0 <exit@plt>:
 80483c0:	ff 25 1c 99 04 08    	jmp    DWORD PTR ds:0x804991c
 80483c6:	68 08 00 00 00       	push   0x8
 80483cb:	e9 d0 ff ff ff       	jmp    80483a0 <.plt>

080483d0 <strlen@plt>:
 80483d0:	ff 25 20 99 04 08    	jmp    DWORD PTR ds:0x8049920
 80483d6:	68 10 00 00 00       	push   0x10
 80483db:	e9 c0 ff ff ff       	jmp    80483a0 <.plt>

080483e0 <__libc_start_main@plt>:
 80483e0:	ff 25 24 99 04 08    	jmp    DWORD PTR ds:0x8049924
 80483e6:	68 18 00 00 00       	push   0x18
 80483eb:	e9 b0 ff ff ff       	jmp    80483a0 <.plt>

080483f0 <fprintf@plt>:
 80483f0:	ff 25 28 99 04 08    	jmp    DWORD PTR ds:0x8049928
 80483f6:	68 20 00 00 00       	push   0x20
 80483fb:	e9 a0 ff ff ff       	jmp    80483a0 <.plt>

08048400 <memset@plt>:
 8048400:	ff 25 2c 99 04 08    	jmp    DWORD PTR ds:0x804992c
 8048406:	68 28 00 00 00       	push   0x28
 804840b:	e9 90 ff ff ff       	jmp    80483a0 <.plt>

08048410 <__ctype_b_loc@plt>:
 8048410:	ff 25 30 99 04 08    	jmp    DWORD PTR ds:0x8049930
 8048416:	68 30 00 00 00       	push   0x30
 804841b:	e9 80 ff ff ff       	jmp    80483a0 <.plt>

セクション .plt.got の逆アセンブル:

08048420 <__gmon_start__@plt>:
 8048420:	ff 25 08 99 04 08    	jmp    DWORD PTR ds:0x8049908
 8048426:	66 90                	xchg   ax,ax

セクション .text の逆アセンブル:

08048430 <_start>:
 8048430:	31 ed                	xor    ebp,ebp
 8048432:	5e                   	pop    esi
 8048433:	89 e1                	mov    ecx,esp
 8048435:	83 e4 f0             	and    esp,0xfffffff0
 8048438:	50                   	push   eax
 8048439:	54                   	push   esp
 804843a:	52                   	push   edx
 804843b:	68 b0 86 04 08       	push   0x80486b0
 8048440:	68 50 86 04 08       	push   0x8048650
 8048445:	51                   	push   ecx
 8048446:	56                   	push   esi
 8048447:	68 2b 85 04 08       	push   0x804852b
 804844c:	e8 8f ff ff ff       	call   80483e0 <__libc_start_main@plt>
 8048451:	f4                   	hlt    
 8048452:	66 90                	xchg   ax,ax
 8048454:	66 90                	xchg   ax,ax
 8048456:	66 90                	xchg   ax,ax
 8048458:	66 90                	xchg   ax,ax
 804845a:	66 90                	xchg   ax,ax
 804845c:	66 90                	xchg   ax,ax
 804845e:	66 90                	xchg   ax,ax

08048460 <__x86.get_pc_thunk.bx>:
 8048460:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048463:	c3                   	ret    
 8048464:	66 90                	xchg   ax,ax
 8048466:	66 90                	xchg   ax,ax
 8048468:	66 90                	xchg   ax,ax
 804846a:	66 90                	xchg   ax,ax
 804846c:	66 90                	xchg   ax,ax
 804846e:	66 90                	xchg   ax,ax

08048470 <deregister_tm_clones>:
 8048470:	b8 3f 99 04 08       	mov    eax,0x804993f
 8048475:	2d 3c 99 04 08       	sub    eax,0x804993c
 804847a:	83 f8 06             	cmp    eax,0x6
 804847d:	76 1a                	jbe    8048499 <deregister_tm_clones+0x29>
 804847f:	b8 00 00 00 00       	mov    eax,0x0
 8048484:	85 c0                	test   eax,eax
 8048486:	74 11                	je     8048499 <deregister_tm_clones+0x29>
 8048488:	55                   	push   ebp
 8048489:	89 e5                	mov    ebp,esp
 804848b:	83 ec 14             	sub    esp,0x14
 804848e:	68 3c 99 04 08       	push   0x804993c
 8048493:	ff d0                	call   eax
 8048495:	83 c4 10             	add    esp,0x10
 8048498:	c9                   	leave  
 8048499:	f3 c3                	repz ret 
 804849b:	90                   	nop
 804849c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

080484a0 <register_tm_clones>:
 80484a0:	b8 3c 99 04 08       	mov    eax,0x804993c
 80484a5:	2d 3c 99 04 08       	sub    eax,0x804993c
 80484aa:	c1 f8 02             	sar    eax,0x2
 80484ad:	89 c2                	mov    edx,eax
 80484af:	c1 ea 1f             	shr    edx,0x1f
 80484b2:	01 d0                	add    eax,edx
 80484b4:	d1 f8                	sar    eax,1
 80484b6:	74 1b                	je     80484d3 <register_tm_clones+0x33>
 80484b8:	ba 00 00 00 00       	mov    edx,0x0
 80484bd:	85 d2                	test   edx,edx
 80484bf:	74 12                	je     80484d3 <register_tm_clones+0x33>
 80484c1:	55                   	push   ebp
 80484c2:	89 e5                	mov    ebp,esp
 80484c4:	83 ec 10             	sub    esp,0x10
 80484c7:	50                   	push   eax
 80484c8:	68 3c 99 04 08       	push   0x804993c
 80484cd:	ff d2                	call   edx
 80484cf:	83 c4 10             	add    esp,0x10
 80484d2:	c9                   	leave  
 80484d3:	f3 c3                	repz ret 
 80484d5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 80484d9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080484e0 <__do_global_dtors_aux>:
 80484e0:	80 3d 44 99 04 08 00 	cmp    BYTE PTR ds:0x8049944,0x0
 80484e7:	75 13                	jne    80484fc <__do_global_dtors_aux+0x1c>
 80484e9:	55                   	push   ebp
 80484ea:	89 e5                	mov    ebp,esp
 80484ec:	83 ec 08             	sub    esp,0x8
 80484ef:	e8 7c ff ff ff       	call   8048470 <deregister_tm_clones>
 80484f4:	c6 05 44 99 04 08 01 	mov    BYTE PTR ds:0x8049944,0x1
 80484fb:	c9                   	leave  
 80484fc:	f3 c3                	repz ret 
 80484fe:	66 90                	xchg   ax,ax

08048500 <frame_dummy>:
 8048500:	b8 1c 98 04 08       	mov    eax,0x804981c
 8048505:	8b 10                	mov    edx,DWORD PTR [eax]
 8048507:	85 d2                	test   edx,edx
 8048509:	75 05                	jne    8048510 <frame_dummy+0x10>
 804850b:	eb 93                	jmp    80484a0 <register_tm_clones>
 804850d:	8d 76 00             	lea    esi,[esi+0x0]
 8048510:	ba 00 00 00 00       	mov    edx,0x0
 8048515:	85 d2                	test   edx,edx
 8048517:	74 f2                	je     804850b <frame_dummy+0xb>
 8048519:	55                   	push   ebp
 804851a:	89 e5                	mov    ebp,esp
 804851c:	83 ec 14             	sub    esp,0x14
 804851f:	50                   	push   eax
 8048520:	ff d2                	call   edx
 8048522:	83 c4 10             	add    esp,0x10
 8048525:	c9                   	leave  
 8048526:	e9 75 ff ff ff       	jmp    80484a0 <register_tm_clones>

0804852b <main>:
 804852b:	55                   	push   ebp
 804852c:	89 e5                	mov    ebp,esp
 804852e:	81 ec 0c 02 00 00    	sub    esp,0x20c
 8048534:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 8048537:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
 804853a:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
 804853d:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
 8048544:	eb 3d                	jmp    8048583 <main+0x58>
 8048546:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
 8048549:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
 8048550:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
 8048553:	01 d0                	add    eax,edx
 8048555:	8b 00                	mov    eax,DWORD PTR [eax]
 8048557:	50                   	push   eax
 8048558:	e8 73 fe ff ff       	call   80483d0 <strlen@plt>
 804855d:	83 c4 04             	add    esp,0x4
 8048560:	89 c2                	mov    edx,eax
 8048562:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
 8048565:	8d 0c 85 00 00 00 00 	lea    ecx,[eax*4+0x0]
 804856c:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
 804856f:	01 c8                	add    eax,ecx
 8048571:	8b 00                	mov    eax,DWORD PTR [eax]
 8048573:	52                   	push   edx
 8048574:	6a 00                	push   0x0
 8048576:	50                   	push   eax
 8048577:	e8 84 fe ff ff       	call   8048400 <memset@plt>
 804857c:	83 c4 0c             	add    esp,0xc
 804857f:	83 45 f8 01          	add    DWORD PTR [ebp-0x8],0x1
 8048583:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
 8048586:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
 804858d:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
 8048590:	01 d0                	add    eax,edx
 8048592:	8b 00                	mov    eax,DWORD PTR [eax]
 8048594:	85 c0                	test   eax,eax
 8048596:	75 ae                	jne    8048546 <main+0x1b>
 8048598:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
 804859f:	83 7d 08 01          	cmp    DWORD PTR [ebp+0x8],0x1
 80485a3:	0f 8e 9a 00 00 00    	jle    8048643 <main+0x118>
 80485a9:	eb 6d                	jmp    8048618 <main+0xed>
 80485ab:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
 80485af:	e8 5c fe ff ff       	call   8048410 <__ctype_b_loc@plt>
 80485b4:	8b 10                	mov    edx,DWORD PTR [eax]
 80485b6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
 80485b9:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 80485bc:	0f be c0             	movsx  eax,al
 80485bf:	01 c0                	add    eax,eax
 80485c1:	01 d0                	add    eax,edx
 80485c3:	0f b7 00             	movzx  eax,WORD PTR [eax]
 80485c6:	0f b7 c0             	movzx  eax,ax
 80485c9:	25 00 04 00 00       	and    eax,0x400
 80485ce:	85 c0                	test   eax,eax
 80485d0:	75 42                	jne    8048614 <main+0xe9>
 80485d2:	e8 39 fe ff ff       	call   8048410 <__ctype_b_loc@plt>
 80485d7:	8b 10                	mov    edx,DWORD PTR [eax]
 80485d9:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
 80485dc:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 80485df:	0f be c0             	movsx  eax,al
 80485e2:	01 c0                	add    eax,eax
 80485e4:	01 d0                	add    eax,edx
 80485e6:	0f b7 00             	movzx  eax,WORD PTR [eax]
 80485e9:	0f b7 c0             	movzx  eax,ax
 80485ec:	25 00 08 00 00       	and    eax,0x800
 80485f1:	85 c0                	test   eax,eax
 80485f3:	75 1f                	jne    8048614 <main+0xe9>
 80485f5:	a1 40 99 04 08       	mov    eax,ds:0x8049940
 80485fa:	68 d0 86 04 08       	push   0x80486d0
 80485ff:	68 d8 86 04 08       	push   0x80486d8
 8048604:	50                   	push   eax
 8048605:	e8 e6 fd ff ff       	call   80483f0 <fprintf@plt>
 804860a:	83 c4 0c             	add    esp,0xc
 804860d:	6a 01                	push   0x1
 804860f:	e8 ac fd ff ff       	call   80483c0 <exit@plt>
 8048614:	83 45 fc 01          	add    DWORD PTR [ebp-0x4],0x1
 8048618:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
 804861b:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 804861e:	84 c0                	test   al,al
 8048620:	74 09                	je     804862b <main+0x100>
 8048622:	81 7d f4 ff 01 00 00 	cmp    DWORD PTR [ebp-0xc],0x1ff
 8048629:	7e 80                	jle    80485ab <main+0x80>
 804862b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 804862e:	83 c0 04             	add    eax,0x4
 8048631:	8b 00                	mov    eax,DWORD PTR [eax]
 8048633:	50                   	push   eax
 8048634:	8d 85 f4 fd ff ff    	lea    eax,[ebp-0x20c]
 804863a:	50                   	push   eax
 804863b:	e8 70 fd ff ff       	call   80483b0 <strcpy@plt>
 8048640:	83 c4 08             	add    esp,0x8
 8048643:	b8 00 00 00 00       	mov    eax,0x0
 8048648:	c9                   	leave  
 8048649:	c3                   	ret    
 804864a:	66 90                	xchg   ax,ax
 804864c:	66 90                	xchg   ax,ax
 804864e:	66 90                	xchg   ax,ax

08048650 <__libc_csu_init>:
 8048650:	55                   	push   ebp
 8048651:	57                   	push   edi
 8048652:	56                   	push   esi
 8048653:	53                   	push   ebx
 8048654:	e8 07 fe ff ff       	call   8048460 <__x86.get_pc_thunk.bx>
 8048659:	81 c3 b3 12 00 00    	add    ebx,0x12b3
 804865f:	83 ec 0c             	sub    esp,0xc
 8048662:	8b 6c 24 20          	mov    ebp,DWORD PTR [esp+0x20]
 8048666:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 804866c:	e8 03 fd ff ff       	call   8048374 <_init>
 8048671:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 8048677:	29 c6                	sub    esi,eax
 8048679:	c1 fe 02             	sar    esi,0x2
 804867c:	85 f6                	test   esi,esi
 804867e:	74 25                	je     80486a5 <__libc_csu_init+0x55>
 8048680:	31 ff                	xor    edi,edi
 8048682:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048688:	83 ec 04             	sub    esp,0x4
 804868b:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 804868f:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 8048693:	55                   	push   ebp
 8048694:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 804869b:	83 c7 01             	add    edi,0x1
 804869e:	83 c4 10             	add    esp,0x10
 80486a1:	39 fe                	cmp    esi,edi
 80486a3:	75 e3                	jne    8048688 <__libc_csu_init+0x38>
 80486a5:	83 c4 0c             	add    esp,0xc
 80486a8:	5b                   	pop    ebx
 80486a9:	5e                   	pop    esi
 80486aa:	5f                   	pop    edi
 80486ab:	5d                   	pop    ebp
 80486ac:	c3                   	ret    
 80486ad:	8d 76 00             	lea    esi,[esi+0x0]

080486b0 <__libc_csu_fini>:
 80486b0:	f3 c3                	repz ret 

セクション .fini の逆アセンブル:

080486b4 <_fini>:
 80486b4:	53                   	push   ebx
 80486b5:	83 ec 08             	sub    esp,0x8
 80486b8:	e8 a3 fd ff ff       	call   8048460 <__x86.get_pc_thunk.bx>
 80486bd:	81 c3 4f 12 00 00    	add    ebx,0x124f
 80486c3:	83 c4 08             	add    esp,0x8
 80486c6:	5b                   	pop    ebx
 80486c7:	c3                   	ret    
